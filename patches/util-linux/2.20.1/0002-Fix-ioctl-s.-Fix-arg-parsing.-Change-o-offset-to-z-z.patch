From bbf15c26337d318b173617228383316e432be1d2 Mon Sep 17 00:00:00 2001
From: Shaun Tancheff <shaun.tancheff@seagate.com>
Date: Fri, 18 Mar 2016 17:39:24 -0500
Subject: [PATCH 2/5] Fix ioctl #'s. Fix arg parsing. Change o/offset to
 z/zone.

---
 sys-utils/blkreport.c  | 12 ++++++------
 sys-utils/blkzonecmd.c | 22 ++++++++++++----------
 2 files changed, 18 insertions(+), 16 deletions(-)

diff --git a/sys-utils/blkreport.c b/sys-utils/blkreport.c
index de85b9c..1a9cf11 100644
--- a/sys-utils/blkreport.c
+++ b/sys-utils/blkreport.c
@@ -450,10 +450,10 @@ int main(int argc, char **argv)
 	static const struct option longopts[] = {
 	    { "help",      0, 0, 'h' },
 	    { "version",   0, 0, 'V' },
-	    { "offset",    1, 0, 'o' }, /* starting LBA */
+	    { "zone",      1, 0, 'z' }, /* starting LBA */
 	    { "length",    1, 0, 'l' }, /* max #of bytes for result */
-	    { "ata",       1, 0, 'a' }, /* use ATA passthrough */
 	    { "option",    1, 0, 'r' }, /* report option */
+	    { "ata",       0, 0, 'a' }, /* use ATA passthrough */
 	    { "verbose",   0, 0, 'v' },
 	    { NULL,        0, 0, 0 }
 	};
@@ -462,7 +462,7 @@ int main(int argc, char **argv)
 	bindtextdomain(PACKAGE, LOCALEDIR);
 	textdomain(PACKAGE);
 
-	while ((c = getopt_long(argc, argv, "hVsvo:l:r:a", longopts, NULL)) != -1) {
+	while ((c = getopt_long(argc, argv, "ahVsvz:l:r:", longopts, NULL)) != -1) {
 		switch(c) {
 		case 'h':
 			usage(stdout);
@@ -471,11 +471,11 @@ int main(int argc, char **argv)
 			printf(UTIL_LINUX_VERSION);
 			return EXIT_SUCCESS;
 		case 'l':
-			length = strtou64_or_error(optarg,
+			length = strtou64_base_or_err(0, optarg,
 					_("failed to parse length"));
 			break;
-		case 'o':
-			offset = strtou64_or_error(optarg,
+		case 'z':
+			offset = strtou64_base_or_err(0, optarg,
 					_("failed to parse offset"));
 			break;
 		case 'r':
diff --git a/sys-utils/blkzonecmd.c b/sys-utils/blkzonecmd.c
index 6351be6..1f7aed0 100644
--- a/sys-utils/blkzonecmd.c
+++ b/sys-utils/blkzonecmd.c
@@ -152,7 +152,7 @@ int main(int argc, char **argv)
 			printf(UTIL_LINUX_VERSION);
 			return EXIT_SUCCESS;
 		case 'z':
-			zone_lba = strtou64_or_error(optarg,
+			zone_lba = strtou64_base_or_err(0, optarg,
 					_("failed to parse length"));
 			break;
 		case 'a':
@@ -200,14 +200,16 @@ int main(int argc, char **argv)
 	if (ioctl(fd, BLKSSZGET, &secsize))
 		err(EXIT_FAILURE, _("%s: BLKSSZGET ioctl failed"), path);
 
-	/* check offset alignment to the sector size */
-	if (zone_lba % secsize)
-		errx(EXIT_FAILURE, _("%s: offset %" PRIu64 " is not aligned "
-			 "to sector size %i"), path, zone_lba, secsize);
+	if (zone_lba != ~0ul) {
+		/* check offset alignment to the sector size */
+		if (zone_lba % secsize)
+			errx(EXIT_FAILURE, _("%s: offset %" PRIu64 " is not aligned "
+				 "to sector size %i"), path, zone_lba, secsize);
 
-	/* is the range end behind the end of the device ?*/
-	if (zone_lba > blksize)
-		errx(EXIT_FAILURE, _("%s: offset is greater than device size"), path);
+		/* is the range end behind the end of the device ?*/
+		if (zone_lba > blksize)
+			errx(EXIT_FAILURE, _("%s: offset is greater than device size"), path);
+	}
 
 	if (ata) {
 		zone_lba |= 1ul; /* ensure low bit is set */
@@ -221,8 +223,8 @@ int main(int argc, char **argv)
 			 err(EXIT_FAILURE, _("%s: BLKOPENZONE ioctl failed"), path);
 		break;
 	case ACT_CLOSE_ZONE:
-		if (ioctl(fd, ACT_CLOSE_ZONE, zone_lba))
-			err(EXIT_FAILURE, _("%s: BLKSECDISCARD ioctl failed"), path);
+		if (ioctl(fd, BLKCLOSEZONE, zone_lba))
+			err(EXIT_FAILURE, _("%s: BLKCLOSEZONE ioctl failed"), path);
 		break;
 
 	case ACT_RESET_ZONE:
-- 
2.8.0.rc3

