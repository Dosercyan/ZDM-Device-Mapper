From 52da02d91bf386832ce4272745ec47a85ceeb24b Mon Sep 17 00:00:00 2001
From: Shaun Tancheff <shaun.tancheff@seagate.com>
Date: Sat, 31 Oct 2015 15:25:06 -0500
Subject: [PATCH] ZDM: Add support for superblock UUID detection by blkid

    ZDM is a new device mapper that blkid isn't aware.
    Adding support for ZDM will allow programs that use blkid for
    detection (such as mount, ceph, LVM, etc) determine how to
    configure the block device for use.

Signed-off-by: Shaun Tancheff <shaun.tancheff@seagate.com>
---
 libblkid/src/Makemodule.am             |  1 +
 libblkid/src/superblocks/superblocks.c |  1 +
 libblkid/src/superblocks/superblocks.h |  1 +
 libblkid/src/superblocks/zdm.c         | 92 ++++++++++++++++++++++++++++++++++
 4 files changed, 95 insertions(+)
 create mode 100644 libblkid/src/superblocks/zdm.c

diff --git a/libblkid/src/Makemodule.am b/libblkid/src/Makemodule.am
index 52d0b0a..ef3d18a 100644
--- a/libblkid/src/Makemodule.am
+++ b/libblkid/src/Makemodule.am
@@ -93,6 +93,7 @@ libblkid_la_SOURCES = \
 	libblkid/src/superblocks/vmfs.c \
 	libblkid/src/superblocks/vxfs.c \
 	libblkid/src/superblocks/xfs.c \
+	libblkid/src/superblocks/zdm.c \
 	libblkid/src/superblocks/zfs.c \
 	\
 	libblkid/src/topology/topology.c \
diff --git a/libblkid/src/superblocks/superblocks.c b/libblkid/src/superblocks/superblocks.c
index 0d970f1..abb3aaa 100644
--- a/libblkid/src/superblocks/superblocks.c
+++ b/libblkid/src/superblocks/superblocks.c
@@ -102,6 +102,7 @@ static const struct blkid_idinfo *idinfos[] =
 	&jmraid_idinfo,
 
 	&bcache_idinfo,
+	&zdm_idinfo,
 	&drbd_idinfo,
 	&drbdmanage_idinfo,
 	&drbdproxy_datalog_idinfo,
diff --git a/libblkid/src/superblocks/superblocks.h b/libblkid/src/superblocks/superblocks.h
index 79dba1a..8df25ee 100644
--- a/libblkid/src/superblocks/superblocks.h
+++ b/libblkid/src/superblocks/superblocks.h
@@ -75,6 +75,7 @@ extern const struct blkid_idinfo nilfs2_idinfo;
 extern const struct blkid_idinfo exfat_idinfo;
 extern const struct blkid_idinfo f2fs_idinfo;
 extern const struct blkid_idinfo bcache_idinfo;
+extern const struct blkid_idinfo zdm_idinfo;
 
 /*
  * superblock functions
diff --git a/libblkid/src/superblocks/zdm.c b/libblkid/src/superblocks/zdm.c
new file mode 100644
index 0000000..469301c
--- /dev/null
+++ b/libblkid/src/superblocks/zdm.c
@@ -0,0 +1,92 @@
+/*
+ * Copyright (C) 2015 Shaun Tancheff <shaun@tancheff.com>
+ *
+ * This file may be redistributed under the terms of the
+ * GNU Lesser General Public License.
+ *
+ * Based on code fragments from zdm-tools
+ */
+
+#include <stddef.h>
+#include <stdio.h>
+#include <uuid/uuid.h>
+
+#include "superblocks.h"
+#include "crc64.h"
+
+typedef uint8_t      u8;
+typedef uint32_t    u32;
+typedef uint64_t    u64;
+
+static const char zdm_magic[] = {
+	0x7a, 0x6f, 0x6e, 0x65, 0x63, 0x44, 0x45, 0x56,
+	0x82, 0x65, 0xf5, 0x7f, 0x48, 0xba, 0x6d, 0x81
+};
+
+struct zdm_super_block {
+	u64 crc64;
+	u8  magic[ARRAY_SIZE(zdm_magic)];
+	uuid_t  uuid;
+	u32 version;     /* 0xMMMMmmpt */
+	u64 sect_start;
+	u64 sect_size;
+	u32 mz_metadata_zones;     /* 3 (default) */
+	u32 mz_over_provision;     /* 5 (minimum) */
+	u64 zdm_blocks;  /* 0 -> <zdm_blocks> for dmsetup table entry */
+	u32 discard;     /* if discard support is enabled */
+	u32 disk_type;   /* HA | HM */
+	u32 zac_zbc;     /* if ZAC / ZBC is supported on backing device */
+	char label[64];
+	u64 data_start;  /* zone # of first *DATA* zone */
+	u64 zone_size;   /* zone size in 512 byte blocks */
+};
+typedef struct zdm_super_block zdm_super_block_t;
+
+static uint64_t zdm_crc64(zdm_super_block_t *sblk)
+{
+	u64 icrc = sblk->crc64;
+	unsigned char *data = (unsigned char *) sblk;
+	size_t sz = sizeof(*sblk);
+	u64 calc;
+
+	sblk->crc64 = 0ul;
+	calc = crc64(0xFFFFFFFFFFFFFFFFULL, data, sz) ^ 0xFFFFFFFFFFFFFFFFULL;
+	sblk->crc64 = icrc;
+
+	return calc;
+}
+
+static int probe_zdm (blkid_probe pr, const struct blkid_idmag *mag)
+{
+	zdm_super_block_t *sblk;
+
+	sblk = blkid_probe_get_sb(pr, mag, struct zdm_super_block);
+	if (!sblk)
+		return errno ? -errno : BLKID_PROBE_NONE;
+
+	if (!blkid_probe_verify_csum(pr, zdm_crc64(sblk), le64_to_cpu(sblk->crc64)))
+		return BLKID_PROBE_NONE;
+
+	if (blkid_probe_set_uuid(pr, sblk->uuid) < 0)
+		return BLKID_PROBE_NONE;
+
+	return BLKID_PROBE_OK;
+}
+
+const struct blkid_idinfo zdm_idinfo =
+{
+	.name		= "zdm",
+	.usage		= BLKID_USAGE_OTHER,
+	.probefunc	= probe_zdm,
+	.minsz		= 1 << 12,
+	.magics		=
+	{
+		{
+		  .magic = zdm_magic,
+		  .len   = sizeof(zdm_magic),
+		  .kboff = 0,
+		  .sboff = offsetof(struct zdm_super_block, magic)
+		} ,
+		{ NULL }
+	}
+};
-- 
2.6.2

