From 0486e38584e0714671602a5bed894778b85b4f93 Mon Sep 17 00:00:00 2001
From: Shaun Tancheff <shaun@tancheff.com>
Date: Thu, 4 Feb 2016 14:06:53 -0600
Subject: [PATCH 7/7] RAID 4/5/6: Fine-grained TRIM enable for ZDM

    Currently RAID 4/5/6 requires an module parameter to enable
    discard bios.

    This was done due the to general inadequacies of relying on
    hardware to correctly self identify.

    Since ZDM does not rely on lower level device support to for
    TRIM handling it seems reasonable to allow another method to
    communicate to MD-RAID that enabling discard is safe.

    This method is also more targeted. Devices are not expected
    to set this parameter directly. And the kernel module parameter
    which assumes devices are unsafe remains intact.

Signed-off-by: Shaun Tancheff <shaun.tancheff@seagate.com>
---
 drivers/md/dm-zoned.c  |  4 ++++
 drivers/md/raid5.c     |  3 ++-
 include/linux/blkdev.h | 15 +++++++++++----
 3 files changed, 17 insertions(+), 5 deletions(-)

diff --git a/drivers/md/dm-zoned.c b/drivers/md/dm-zoned.c
index 73cba32..7d28767 100644
--- a/drivers/md/dm-zoned.c
+++ b/drivers/md/dm-zoned.c
@@ -1807,6 +1807,10 @@ static void zoned_io_hints(struct dm_target *ti, struct queue_limits *limits)
 		blk_limits_io_min(limits, 0);
 		blk_limits_io_opt(limits, 8 << SECTOR_SHIFT);
 	}
+
+	/* NOTE: set discard stuff here */
+	limits->raid_discard_safe = 1;
+
 }
 
 /* -------------------------------------------------------------------------- */
diff --git a/drivers/md/raid5.c b/drivers/md/raid5.c
index 08a5d6a..0f61a12 100644
--- a/drivers/md/raid5.c
+++ b/drivers/md/raid5.c
@@ -6956,7 +6956,8 @@ static int run(struct mddev *mddev)
 			 * if the sysadmin has confirmed that only safe devices
 			 * are in use by setting a module parameter.
 			 */
-			if (!devices_handle_discard_safely) {
+			if (!devices_handle_discard_safely &&
+			    !bdev_discard_raid_safe(rdev->bdev)) {
 				if (discard_supported) {
 					pr_info("md/raid456: discard support disabled due to uncertainty.\n");
 					pr_info("Set raid456.devices_handle_discard_safely=Y to override.\n");
diff --git a/include/linux/blkdev.h b/include/linux/blkdev.h
index 19c2e94..3acf2cf 100644
--- a/include/linux/blkdev.h
+++ b/include/linux/blkdev.h
@@ -270,11 +270,13 @@ struct queue_limits {
 	unsigned short		max_segments;
 	unsigned short		max_integrity_segments;
 
-	unsigned char		misaligned;
-	unsigned char		discard_misaligned;
-	unsigned char		cluster;
-	unsigned char		discard_zeroes_data;
 	unsigned char		raid_partial_stripes_expensive;
+
+	unsigned		misaligned:1;
+	unsigned		discard_misaligned:1;
+	unsigned		cluster:1;
+	unsigned		discard_zeroes_data:1;
+	unsigned		raid_discard_safe:1;
 };
 
 struct request_queue {
@@ -1305,6 +1307,11 @@ static inline unsigned int bdev_discard_zeroes_data(struct block_device *bdev)
 	return queue_discard_zeroes_data(bdev_get_queue(bdev));
 }
 
+static inline unsigned int bdev_discard_raid_safe(struct block_device *bdev)
+{
+	return bdev_get_queue(bdev)->limits.raid_discard_safe;
+}
+
 static inline unsigned int bdev_write_same(struct block_device *bdev)
 {
 	struct request_queue *q = bdev_get_queue(bdev);
-- 
2.7.0

